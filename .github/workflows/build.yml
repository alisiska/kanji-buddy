name: CI Build and Test

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

env:
  CI: true

jobs:
  test-build:
    name: Build and Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check dependencies for known vulnerabilities
        run: npm audit --audit-level moderate

      - name: Run linting
        run: npm run lint

      - name: Run tests (if available)
        run: npm test -- --watchAll=false --passWithNoTests

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          # Check if build directory exists
          if [ ! -d "dist" ]; then
            echo "‚ùå Build failed: dist directory not found"
            exit 1
          fi

          # Check if main files exist
          if [ ! -f "dist/index.html" ]; then
            echo "‚ùå Build failed: index.html not found"
            exit 1
          fi

          if [ ! -f "dist/assets/index-*.js" ]; then
            echo "‚ùå Build failed: JavaScript bundle not found"
            exit 1
          fi

          if [ ! -f "dist/assets/index-*.css" ]; then
            echo "‚ùå Build failed: CSS bundle not found"
            exit 1
          fi

          echo "‚úÖ Build completed successfully"
          echo "üìÅ Build output:"
          find dist/ -type f -name "*.html" -o -name "*.js" -o -name "*.css" | head -10

      - name: Upload build artifacts for deployment preview
        uses: actions/upload-pages-artifact@v1
        with:
          path: dist/

  # Optional: Add a deployment job for main branch
  deploy:
    name: Deploy to GitHub Pages
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test-build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
